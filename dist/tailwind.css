/*! tailwindcss v4.1.13 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components;
@layer theme {
  :root, :host {
    --font-sans: var(--wp--preset--font-family--onest);
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New',
    monospace;
    --color-white: #fff;
    --spacing: 0.25rem;
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --font-weight-medium: 500;
    --font-weight-bold: 700;
    --font-weight-black: 900;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --ease-in: cubic-bezier(0.4, 0, 1, 1);
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --color-primary: var(--wp--preset--color--primary);
    --color-secondary: var(--wp--preset--color--secondary);
    --color-accent: var(--wp--preset--color--accent);
    --color-base: var(--wp--preset--color--base);
    --color-base-alt: var(--wp--preset--color--base-alt);
    --color-on-secondary: var(--wp--preset--color--on-secondary);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji');
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type='button'], [type='reset'], [type='submit']), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden='until-found'])) {
    display: none !important;
  }
}
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip-path: inset(50%);
  white-space: nowrap;
  border-width: 0;
}
.absolute {
  position: absolute;
}
.relative {
  position: relative;
}
.static {
  position: static;
}
.inset-0 {
  inset: calc(var(--spacing) * 0);
}
.top-0 {
  top: calc(var(--spacing) * 0);
}
.left-0 {
  left: calc(var(--spacing) * 0);
}
.container {
  width: 100%;
  @media (width >= 40rem) {
    max-width: 40rem;
  }
  @media (width >= 48rem) {
    max-width: 48rem;
  }
  @media (width >= 64rem) {
    max-width: 64rem;
  }
  @media (width >= 80rem) {
    max-width: 80rem;
  }
  @media (width >= 96rem) {
    max-width: 96rem;
  }
}
.m-0 {
  margin: calc(var(--spacing) * 0);
}
.mx-auto {
  margin-inline: auto;
}
.mt-0 {
  margin-top: calc(var(--spacing) * 0);
}
.mt-1 {
  margin-top: calc(var(--spacing) * 1);
}
.mt-4 {
  margin-top: calc(var(--spacing) * 4);
}
.mt-8 {
  margin-top: calc(var(--spacing) * 8);
}
.mr-0 {
  margin-right: calc(var(--spacing) * 0);
}
.mb-0 {
  margin-bottom: calc(var(--spacing) * 0);
}
.mb-1 {
  margin-bottom: calc(var(--spacing) * 1);
}
.mb-4 {
  margin-bottom: calc(var(--spacing) * 4);
}
.mb-8 {
  margin-bottom: calc(var(--spacing) * 8);
}
.mb-12 {
  margin-bottom: calc(var(--spacing) * 12);
}
.mb-18 {
  margin-bottom: calc(var(--spacing) * 18);
}
.mb-24 {
  margin-bottom: calc(var(--spacing) * 24);
}
.ml-4 {
  margin-left: calc(var(--spacing) * 4);
}
.ml-5 {
  margin-left: calc(var(--spacing) * 5);
}
.block {
  display: block;
}
.flex {
  display: flex;
}
.hidden {
  display: none;
}
.inline-flex {
  display: inline-flex;
}
.table {
  display: table;
}
.size-full {
  width: 100%;
  height: 100%;
}
.h-3 {
  height: calc(var(--spacing) * 3);
}
.h-4 {
  height: calc(var(--spacing) * 4);
}
.h-8 {
  height: calc(var(--spacing) * 8);
}
.h-12 {
  height: calc(var(--spacing) * 12);
}
.h-\[42px\] {
  height: 42px;
}
.h-\[var\(--wp--custom--button--min-height\)\] {
  height: var(--wp--custom--button--min-height);
}
.h-full {
  height: 100%;
}
.w-0 {
  width: calc(var(--spacing) * 0);
}
.w-0\.5 {
  width: calc(var(--spacing) * 0.5);
}
.w-1 {
  width: calc(var(--spacing) * 1);
}
.w-3 {
  width: calc(var(--spacing) * 3);
}
.w-4 {
  width: calc(var(--spacing) * 4);
}
.w-\[var\(--wp--custom--button--min-height\)\] {
  width: var(--wp--custom--button--min-height);
}
.w-auto {
  width: auto;
}
.w-full {
  width: 100%;
}
.max-w-\[var\(--wp--custom--container--max\)\] {
  max-width: var(--wp--custom--container--max);
}
.border-collapse {
  border-collapse: collapse;
}
.transform {
  transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
}
.resize {
  resize: both;
}
.flex-col {
  flex-direction: column;
}
.items-center {
  align-items: center;
}
.items-start {
  align-items: flex-start;
}
.justify-between {
  justify-content: space-between;
}
.justify-center {
  justify-content: center;
}
.gap-3 {
  gap: calc(var(--spacing) * 3);
}
.gap-4 {
  gap: calc(var(--spacing) * 4);
}
.gap-8 {
  gap: calc(var(--spacing) * 8);
}
.space-y-2 {
  :where(& > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
  }
}
.divide-x {
  :where(& > :not(:last-child)) {
    --tw-divide-x-reverse: 0;
    border-inline-style: var(--tw-border-style);
    border-inline-start-width: calc(1px * var(--tw-divide-x-reverse));
    border-inline-end-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
  }
}
.divide-white {
  :where(& > :not(:last-child)) {
    border-color: var(--color-white);
  }
}
.divide-white\/10 {
  :where(& > :not(:last-child)) {
    border-color: color-mix(in srgb, #fff 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }
}
.overflow-hidden {
  overflow: hidden;
}
.rounded-full {
  border-radius: calc(infinity * 1px);
}
.rounded-lg {
  border-radius: var(--radius-lg);
}
.rounded-xl {
  border-radius: var(--radius-xl);
}
.rounded-r-lg {
  border-top-right-radius: var(--radius-lg);
  border-bottom-right-radius: var(--radius-lg);
}
.border {
  border-style: var(--tw-border-style);
  border-width: 1px;
}
.border-0 {
  border-style: var(--tw-border-style);
  border-width: 0px;
}
.border-none {
  --tw-border-style: none;
  border-style: none;
}
.border-white {
  border-color: var(--color-white);
}
.border-white\/20 {
  border-color: color-mix(in srgb, #fff 20%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
  }
}
.bg-base {
  background-color: var(--color-base);
}
.bg-base-alt {
  background-color: var(--color-base-alt);
}
.bg-secondary {
  background-color: var(--color-secondary);
}
.bg-white {
  background-color: var(--color-white);
}
.bg-white\/20 {
  background-color: color-mix(in srgb, #fff 20%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    background-color: color-mix(in oklab, var(--color-white) 20%, transparent);
  }
}
.bg-gradient-to-r {
  --tw-gradient-position: to right in oklab;
  background-image: linear-gradient(var(--tw-gradient-stops));
}
.from-secondary {
  --tw-gradient-from: var(--color-secondary);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.via-primary {
  --tw-gradient-via: var(--color-primary);
  --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-via-stops);
}
.to-accent {
  --tw-gradient-to: var(--color-accent);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.bg-size-\[0\] {
  background-size: 0;
}
.bg-clip-text {
  background-clip: text;
}
.bg-center {
  background-position: center;
}
.p-3 {
  padding: calc(var(--spacing) * 3);
}
.p-4 {
  padding: calc(var(--spacing) * 4);
}
.p-6 {
  padding: calc(var(--spacing) * 6);
}
.px-3 {
  padding-inline: calc(var(--spacing) * 3);
}
.px-6 {
  padding-inline: calc(var(--spacing) * 6);
}
.px-10 {
  padding-inline: calc(var(--spacing) * 10);
}
.py-6 {
  padding-block: calc(var(--spacing) * 6);
}
.py-8 {
  padding-block: calc(var(--spacing) * 8);
}
.py-24 {
  padding-block: calc(var(--spacing) * 24);
}
.pt-8 {
  padding-top: calc(var(--spacing) * 8);
}
.pt-48 {
  padding-top: calc(var(--spacing) * 48);
}
.pb-8 {
  padding-bottom: calc(var(--spacing) * 8);
}
.text-left {
  text-align: left;
}
.text-2xl {
  font-size: var(--text-2xl);
  line-height: var(--tw-leading, var(--text-2xl--line-height));
}
.text-3xl {
  font-size: var(--text-3xl);
  line-height: var(--tw-leading, var(--text-3xl--line-height));
}
.text-5xl {
  font-size: var(--text-5xl);
  line-height: var(--tw-leading, var(--text-5xl--line-height));
}
.text-lg {
  font-size: var(--text-lg);
  line-height: var(--tw-leading, var(--text-lg--line-height));
}
.text-sm {
  font-size: var(--text-sm);
  line-height: var(--tw-leading, var(--text-sm--line-height));
}
.font-black {
  --tw-font-weight: var(--font-weight-black);
  font-weight: var(--font-weight-black);
}
.font-bold {
  --tw-font-weight: var(--font-weight-bold);
  font-weight: var(--font-weight-bold);
}
.font-medium {
  --tw-font-weight: var(--font-weight-medium);
  font-weight: var(--font-weight-medium);
}
.text-on-secondary {
  color: var(--color-on-secondary);
}
.text-transparent {
  color: transparent;
}
.text-white {
  color: var(--color-white);
}
.no-underline {
  text-decoration-line: none;
}
.underline {
  text-decoration-line: underline;
}
.outline {
  outline-style: var(--tw-outline-style);
  outline-width: 1px;
}
.transition-colors {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}
.transition-transform {
  transition-property: transform, translate, scale, rotate;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}
.duration-200 {
  --tw-duration: 200ms;
  transition-duration: 200ms;
}
.ease-in {
  --tw-ease: var(--ease-in);
  transition-timing-function: var(--ease-in);
}
.group-focus-within\:translate-x-2 {
  &:is(:where(.group):focus-within *) {
    --tw-translate-x: calc(var(--spacing) * 2);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
}
.group-hover\:translate-x-2 {
  &:is(:where(.group):hover *) {
    @media (hover: hover) {
      --tw-translate-x: calc(var(--spacing) * 2);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
}
.focus-within\:ring-2 {
  &:focus-within {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.focus-within\:ring-primary\/40 {
  &:focus-within {
    --tw-ring-color: var(--color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-ring-color: color-mix(in oklab, var(--color-primary) 40%, transparent);
    }
  }
}
.hover\:bg-base-alt {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-base-alt);
    }
  }
}
.md\:mt-0 {
  @media (width >= 48rem) {
    margin-top: calc(var(--spacing) * 0);
  }
}
.md\:mb-0 {
  @media (width >= 48rem) {
    margin-bottom: calc(var(--spacing) * 0);
  }
}
.md\:mb-14 {
  @media (width >= 48rem) {
    margin-bottom: calc(var(--spacing) * 14);
  }
}
.md\:block {
  @media (width >= 48rem) {
    display: block;
  }
}
.md\:hidden {
  @media (width >= 48rem) {
    display: none;
  }
}
.md\:w-1\/2 {
  @media (width >= 48rem) {
    width: calc(1/2 * 100%);
  }
}
.md\:w-1\/4 {
  @media (width >= 48rem) {
    width: calc(1/4 * 100%);
  }
}
.md\:w-2\/12 {
  @media (width >= 48rem) {
    width: calc(2/12 * 100%);
  }
}
.md\:w-3\/12 {
  @media (width >= 48rem) {
    width: calc(3/12 * 100%);
  }
}
.md\:w-4\/12 {
  @media (width >= 48rem) {
    width: calc(4/12 * 100%);
  }
}
.md\:w-7\/12 {
  @media (width >= 48rem) {
    width: calc(7/12 * 100%);
  }
}
.md\:w-8\/12 {
  @media (width >= 48rem) {
    width: calc(8/12 * 100%);
  }
}
.md\:w-9\/12 {
  @media (width >= 48rem) {
    width: calc(9/12 * 100%);
  }
}
.md\:flex-row {
  @media (width >= 48rem) {
    flex-direction: row;
  }
}
.md\:items-center {
  @media (width >= 48rem) {
    align-items: center;
  }
}
.md\:items-end {
  @media (width >= 48rem) {
    align-items: flex-end;
  }
}
.md\:gap-0 {
  @media (width >= 48rem) {
    gap: calc(var(--spacing) * 0);
  }
}
.md\:bg-cover {
  @media (width >= 48rem) {
    background-size: cover;
  }
}
.md\:p-3 {
  @media (width >= 48rem) {
    padding: calc(var(--spacing) * 3);
  }
}
.md\:p-8 {
  @media (width >= 48rem) {
    padding: calc(var(--spacing) * 8);
  }
}
.md\:p-12 {
  @media (width >= 48rem) {
    padding: calc(var(--spacing) * 12);
  }
}
.md\:px-0 {
  @media (width >= 48rem) {
    padding-inline: calc(var(--spacing) * 0);
  }
}
.md\:px-12 {
  @media (width >= 48rem) {
    padding-inline: calc(var(--spacing) * 12);
  }
}
.md\:py-12 {
  @media (width >= 48rem) {
    padding-block: calc(var(--spacing) * 12);
  }
}
.md\:py-24 {
  @media (width >= 48rem) {
    padding-block: calc(var(--spacing) * 24);
  }
}
.md\:pt-0 {
  @media (width >= 48rem) {
    padding-top: calc(var(--spacing) * 0);
  }
}
.md\:pb-16 {
  @media (width >= 48rem) {
    padding-bottom: calc(var(--spacing) * 16);
  }
}
.md\:text-2xl {
  @media (width >= 48rem) {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
}
.md\:text-4xl {
  @media (width >= 48rem) {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
}
.md\:text-5xl {
  @media (width >= 48rem) {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }
}
.md\:text-6xl {
  @media (width >= 48rem) {
    font-size: var(--text-6xl);
    line-height: var(--tw-leading, var(--text-6xl--line-height));
  }
}
.lg\:mt-0 {
  @media (width >= 64rem) {
    margin-top: calc(var(--spacing) * 0);
  }
}
.lg\:mb-0 {
  @media (width >= 64rem) {
    margin-bottom: calc(var(--spacing) * 0);
  }
}
.lg\:ml-0 {
  @media (width >= 64rem) {
    margin-left: calc(var(--spacing) * 0);
  }
}
.lg\:flex {
  @media (width >= 64rem) {
    display: flex;
  }
}
.lg\:hidden {
  @media (width >= 64rem) {
    display: none;
  }
}
.lg\:h-\[53px\] {
  @media (width >= 64rem) {
    height: 53px;
  }
}
.lg\:h-full {
  @media (width >= 64rem) {
    height: 100%;
  }
}
.lg\:w-1\/2 {
  @media (width >= 64rem) {
    width: calc(1/2 * 100%);
  }
}
.lg\:w-1\/3 {
  @media (width >= 64rem) {
    width: calc(1/3 * 100%);
  }
}
.lg\:w-2\/3 {
  @media (width >= 64rem) {
    width: calc(2/3 * 100%);
  }
}
.lg\:w-2\/5 {
  @media (width >= 64rem) {
    width: calc(2/5 * 100%);
  }
}
.lg\:w-2\/12 {
  @media (width >= 64rem) {
    width: calc(2/12 * 100%);
  }
}
.lg\:w-3\/5 {
  @media (width >= 64rem) {
    width: calc(3/5 * 100%);
  }
}
.lg\:w-9\/12 {
  @media (width >= 64rem) {
    width: calc(9/12 * 100%);
  }
}
.lg\:w-auto {
  @media (width >= 64rem) {
    width: auto;
  }
}
.lg\:flex-row {
  @media (width >= 64rem) {
    flex-direction: row;
  }
}
.lg\:items-center {
  @media (width >= 64rem) {
    align-items: center;
  }
}
.lg\:items-end {
  @media (width >= 64rem) {
    align-items: flex-end;
  }
}
.lg\:justify-start {
  @media (width >= 64rem) {
    justify-content: flex-start;
  }
}
.lg\:gap-0 {
  @media (width >= 64rem) {
    gap: calc(var(--spacing) * 0);
  }
}
.lg\:space-y-0 {
  @media (width >= 64rem) {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
}
.lg\:space-x-6 {
  @media (width >= 64rem) {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 6) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
}
.lg\:space-x-8 {
  @media (width >= 64rem) {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 8) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
}
.lg\:space-x-16 {
  @media (width >= 64rem) {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 16) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 16) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
}
.lg\:px-12 {
  @media (width >= 64rem) {
    padding-inline: calc(var(--spacing) * 12);
  }
}
.lg\:py-24 {
  @media (width >= 64rem) {
    padding-block: calc(var(--spacing) * 24);
  }
}
.lg\:pt-0 {
  @media (width >= 64rem) {
    padding-top: calc(var(--spacing) * 0);
  }
}
.lg\:pb-16 {
  @media (width >= 64rem) {
    padding-bottom: calc(var(--spacing) * 16);
  }
}
.lg\:text-5xl {
  @media (width >= 64rem) {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }
}
.lg\:text-6xl {
  @media (width >= 64rem) {
    font-size: var(--text-6xl);
    line-height: var(--tw-leading, var(--text-6xl--line-height));
  }
}
.xl\:w-1\/2 {
  @media (width >= 80rem) {
    width: calc(1/2 * 100%);
  }
}
.xl\:space-x-8 {
  @media (width >= 80rem) {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 8) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
}
.xl\:space-x-12 {
  @media (width >= 80rem) {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 12) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 12) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
}
.xl\:space-x-16 {
  @media (width >= 80rem) {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 16) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 16) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
}
.xl\:px-0 {
  @media (width >= 80rem) {
    padding-inline: calc(var(--spacing) * 0);
  }
}
html {
  font-size: 15px;
}
body {
  padding: 0;
}
.has-quote-bg {
  background-image: url("../src/images/Pattern.png");
  background-repeat: no-repeat;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-divide-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-space-y-reverse: 0;
      --tw-divide-x-reverse: 0;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-font-weight: initial;
      --tw-outline-style: solid;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-space-x-reverse: 0;
    }
  }
}
